### YamlMime:UniversalReference
items:
  - uid: decentraland-ecs.Angle
    summary: Defines angle representation
    name: Angle
    fullName: Angle
    langs:
      - typeScript
    type: class
    package: decentraland-ecs
    children:
      - decentraland-ecs.Angle.(constructor)
      - decentraland-ecs.Angle.BetweenTwoPoints
      - decentraland-ecs.Angle.degrees
      - decentraland-ecs.Angle.FromDegrees
      - decentraland-ecs.Angle.FromRadians
      - decentraland-ecs.Angle.radians
  - uid: decentraland-ecs.Angle.(constructor)
    summary: Creates an Angle object of "radians" radians (float).
    name: (constructor)(radians)
    fullName: (constructor)(radians)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(radians: number);'
      parameters:
        - id: radians
          description: ''
          type:
            - number
  - uid: decentraland-ecs.Angle.BetweenTwoPoints
    summary: Gets a new Angle object valued with the angle value in radians between the two given vectors
    name: 'BetweenTwoPoints(a, b)'
    fullName: 'BetweenTwoPoints(a, b)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static BetweenTwoPoints(a: Vector2, b: Vector2): Angle;'
      return:
        type:
          - decentraland-ecs.Angle
        description: a new Angle
      parameters:
        - id: a
          description: defines first vector
          type:
            - decentraland-ecs.Vector2
        - id: b
          description: defines second vector
          type:
            - decentraland-ecs.Vector2
  - uid: decentraland-ecs.Angle.degrees
    summary: Get value in degrees
    name: degrees()
    fullName: degrees()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'degrees(): number;'
      return:
        type:
          - number
        description: the Angle value in degrees (float)
  - uid: decentraland-ecs.Angle.FromDegrees
    summary: Gets a new Angle object from the given float in degrees
    name: FromDegrees(degrees)
    fullName: FromDegrees(degrees)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static FromDegrees(degrees: number): Angle;'
      return:
        type:
          - decentraland-ecs.Angle
        description: a new Angle
      parameters:
        - id: degrees
          description: defines the angle value in degrees
          type:
            - number
  - uid: decentraland-ecs.Angle.FromRadians
    summary: Gets a new Angle object from the given float in radians
    name: FromRadians(radians)
    fullName: FromRadians(radians)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static FromRadians(radians: number): Angle;'
      return:
        type:
          - decentraland-ecs.Angle
        description: a new Angle
      parameters:
        - id: radians
          description: defines the angle value in radians
          type:
            - number
  - uid: decentraland-ecs.Angle.radians
    summary: Get value in radians
    name: radians()
    fullName: radians()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'radians(): number;'
      return:
        type:
          - number
        description: the Angle value in radians (float)
