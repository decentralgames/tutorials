import { IEvents } from './Types';
import { OnUUIDEvent } from './Components';
/**
 * @public
 */
export declare class OnFocus extends OnUUIDEvent<'onFocus'> {
    readonly type: string;
    constructor(callback: (event: IEvents['onFocus']) => void);
}
/**
 * @public
 */
export declare class OnTextSubmit extends OnUUIDEvent<'onTextSubmit'> {
    readonly type: string;
    constructor(callback: (event: IEvents['onTextSubmit']) => void);
}
/**
 * @public
 */
export declare class OnBlur extends OnUUIDEvent<'onBlur'> {
    readonly type: string;
    constructor(callback: (event: IEvents['onBlur']) => void);
}
/**
 * @public
 */
export declare class OnClick extends OnUUIDEvent<'onClick'> {
    readonly type: string;
    constructor(callback: (event: IEvents['onClick']) => void);
}
/**
 * @public
 */
export declare class OnEnter extends OnUUIDEvent<'onEnter'> {
    readonly type: string;
    constructor(callback: (event: IEvents['onEnter']) => void);
}
/**
 * @public
 */
export declare class OnChanged extends OnUUIDEvent<'onChange'> {
    readonly type: string;
    constructor(callback: (event: IEvents['onChange']) => void);
}
