### YamlMime:UniversalReference
items:
  - uid: decentraland-ecs.IEvents
    name: IEvents
    fullName: IEvents
    langs:
      - typeScript
    type: interface
    package: decentraland-ecs
    children:
      - decentraland-ecs.IEvents.chatMessage
      - decentraland-ecs.IEvents.comms
      - decentraland-ecs.IEvents.entitiesOutOfBoundaries
      - decentraland-ecs.IEvents.entityBackInScene
      - decentraland-ecs.IEvents.entityOutOfScene
      - decentraland-ecs.IEvents.gizmoEvent
      - decentraland-ecs.IEvents.limitsExceeded
      - decentraland-ecs.IEvents.metricsUpdate
      - decentraland-ecs.IEvents.onAnimationEnd
      - decentraland-ecs.IEvents.onBlur
      - decentraland-ecs.IEvents.onChange
      - decentraland-ecs.IEvents.onClick
      - decentraland-ecs.IEvents.onEnter
      - decentraland-ecs.IEvents.onFocus
      - decentraland-ecs.IEvents.onTextSubmit
      - decentraland-ecs.IEvents.pointerDown
      - decentraland-ecs.IEvents.pointerUp
      - decentraland-ecs.IEvents.positionChanged
      - decentraland-ecs.IEvents.rotationChanged
      - decentraland-ecs.IEvents.uuidEvent
  - uid: decentraland-ecs.IEvents.chatMessage
    summary: '`chatMessage` is triggered when the user sends a message through chat entity.'
    name: chatMessage
    fullName: chatMessage
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        chatMessage: {
                id: string;
                sender: string;
                message: string;
                isCommand: boolean;
            };
      return:
        type:
          - |-
            {
                    id: string;
                    sender: string;
                    message: string;
                    isCommand: boolean;
                }
  - uid: decentraland-ecs.IEvents.comms
    summary: This event gets triggered after receiving a comms message.
    name: comms
    fullName: comms
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        comms: {
                sender: string;
                message: string;
            };
      return:
        type:
          - |-
            {
                    sender: string;
                    message: string;
                }
  - uid: decentraland-ecs.IEvents.entitiesOutOfBoundaries
    summary: >-
      After checking entities outside the fences, if any is outside, this event will be triggered with all the entities
      outside the scene.
    name: entitiesOutOfBoundaries
    fullName: entitiesOutOfBoundaries
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        entitiesOutOfBoundaries: {
                entities: string[];
            };
      return:
        type:
          - |-
            {
                    entities: string[];
                }
  - uid: decentraland-ecs.IEvents.entityBackInScene
    summary: This event gets triggered when an entity enters the scene fences.
    name: entityBackInScene
    fullName: entityBackInScene
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        entityBackInScene: {
                entityId: string;
            };
      return:
        type:
          - |-
            {
                    entityId: string;
                }
  - uid: decentraland-ecs.IEvents.entityOutOfScene
    summary: This event gets triggered when an entity leaves the scene fences.
    name: entityOutOfScene
    fullName: entityOutOfScene
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        entityOutOfScene: {
                entityId: string;
            };
      return:
        type:
          - |-
            {
                    entityId: string;
                }
  - uid: decentraland-ecs.IEvents.gizmoEvent
    summary: For gizmos
    name: gizmoEvent
    fullName: gizmoEvent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gizmoEvent: GizmoDragEndEvent | GizmoSelectedEvent;'
      return:
        type:
          - GizmoDragEndEvent | GizmoSelectedEvent
  - uid: decentraland-ecs.IEvents.limitsExceeded
    name: limitsExceeded
    fullName: limitsExceeded
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        limitsExceeded: {
                given: Record<string, number>;
                limit: Record<string, number>;
            };
      return:
        type:
          - |-
            {
                    given: Record<string, number>;
                    limit: Record<string, number>;
                }
  - uid: decentraland-ecs.IEvents.metricsUpdate
    name: metricsUpdate
    fullName: metricsUpdate
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        metricsUpdate: {
                given: Record<string, number>;
                limit: Record<string, number>;
            };
      return:
        type:
          - |-
            {
                    given: Record<string, number>;
                    limit: Record<string, number>;
                }
  - uid: decentraland-ecs.IEvents.onAnimationEnd
    summary: '`onAnimationEnd` is triggered when an animation clip gets finish'
    name: onAnimationEnd
    fullName: onAnimationEnd
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        onAnimationEnd: {
                clipName: string;
            };
      return:
        type:
          - |-
            {
                    clipName: string;
                }
  - uid: decentraland-ecs.IEvents.onBlur
    summary: >-
      `onBlur` is triggered when an entity loses its focus. Dispatched by the `ui-input` and `ui-password` entities when
      the value is changed. It triggers a callback.


      Notice: Only entities with ID will be listening for click events.
    name: onBlur
    fullName: onBlur
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        onBlur: {
                entityId: string;
                pointerId: number;
            };
      return:
        type:
          - |-
            {
                    entityId: string;
                    pointerId: number;
                }
  - uid: decentraland-ecs.IEvents.onChange
    summary: >-
      `onChange` is triggered when an entity changes its own internal state. Dispatched by the `ui-*` entities when
      their value is changed. It triggers a callback. Notice: Only entities with ID will be listening for click events.
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        onChange: {
                value?: any;
                pointerId?: number;
            };
      return:
        type:
          - |-
            {
                    value?: any;
                    pointerId?: number;
                }
  - uid: decentraland-ecs.IEvents.onClick
    summary: The onClick event is only used for UI elements
    name: onClick
    fullName: onClick
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        onClick: {
                entityId: string;
            };
      return:
        type:
          - |-
            {
                    entityId: string;
                }
  - uid: decentraland-ecs.IEvents.onEnter
    summary: >-
      `onEnter` is triggered when the user hits the "Enter" key from the keyboard Used principally by the Chat internal
      scene
    name: onEnter
    fullName: onEnter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onEnter: {};'
      return:
        type:
          - '{}'
  - uid: decentraland-ecs.IEvents.onFocus
    summary: >-
      `onFocus` is triggered when an entity focus is active. Dispatched by the `ui-input` and `ui-password` entities
      when the value is changed. It triggers a callback.


      Notice: Only entities with ID will be listening for click events.
    name: onFocus
    fullName: onFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        onFocus: {
                entityId: string;
                pointerId: number;
            };
      return:
        type:
          - |-
            {
                    entityId: string;
                    pointerId: number;
                }
  - uid: decentraland-ecs.IEvents.onTextSubmit
    name: onTextSubmit
    fullName: onTextSubmit
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        onTextSubmit: {
                text: string;
            };
      return:
        type:
          - |-
            {
                    text: string;
                }
  - uid: decentraland-ecs.IEvents.pointerDown
    summary: >-
      `pointerDown` is triggered when the user press an input pointer. It could be a VR controller, a touch screen or
      the mouse.
    name: pointerDown
    fullName: pointerDown
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pointerDown: PointerEvent;'
      return:
        type:
          - PointerEvent
  - uid: decentraland-ecs.IEvents.pointerUp
    summary: >-
      `pointerUp` is triggered when the user releases an input pointer. It could be a VR controller, a touch screen or
      the mouse.
    name: pointerUp
    fullName: pointerUp
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pointerUp: PointerEvent;'
      return:
        type:
          - PointerEvent
  - uid: decentraland-ecs.IEvents.positionChanged
    summary: >-
      `positionChanged` is triggered when the position of the camera changes This event is throttled to 10 times per
      second.
    name: positionChanged
    fullName: positionChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        positionChanged: {
                position: ReadOnlyVector3;
                cameraPosition: ReadOnlyVector3;
                playerHeight: number;
            };
      return:
        type:
          - |-
            {
                    position: ReadOnlyVector3;
                    cameraPosition: ReadOnlyVector3;
                    playerHeight: number;
                }
  - uid: decentraland-ecs.IEvents.rotationChanged
    summary: >-
      `rotationChanged` is triggered when the rotation of the camera changes. This event is throttled to 10 times per
      second.
    name: rotationChanged
    fullName: rotationChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        rotationChanged: {
                rotation: ReadOnlyVector3;
                quaternion: ReadOnlyQuaternion;
            };
      return:
        type:
          - |-
            {
                    rotation: ReadOnlyVector3;
                    quaternion: ReadOnlyQuaternion;
                }
  - uid: decentraland-ecs.IEvents.uuidEvent
    name: uuidEvent
    fullName: uuidEvent
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        uuidEvent: {
                uuid: string;
                payload: any;
            };
      return:
        type:
          - |-
            {
                    uuid: string;
                    payload: any;
                }
