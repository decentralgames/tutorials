### YamlMime:UniversalReference
items:
  - uid: decentraland-ecs.IEntity
    name: IEntity
    fullName: IEntity
    langs:
      - typeScript
    type: interface
    package: decentraland-ecs
    children:
      - decentraland-ecs.IEntity.addComponent
      - decentraland-ecs.IEntity.addComponentOrReplace
      - decentraland-ecs.IEntity.getComponent
      - decentraland-ecs.IEntity.getComponent_1
      - decentraland-ecs.IEntity.getComponent_2
      - decentraland-ecs.IEntity.getComponentOrCreate
      - decentraland-ecs.IEntity.getComponentOrNull
      - decentraland-ecs.IEntity.getComponentOrNull_1
      - decentraland-ecs.IEntity.getComponentOrNull_2
      - decentraland-ecs.IEntity.getParent
      - decentraland-ecs.IEntity.hasComponent
      - decentraland-ecs.IEntity.hasComponent_1
      - decentraland-ecs.IEntity.hasComponent_2
      - decentraland-ecs.IEntity.hasComponent_3
      - decentraland-ecs.IEntity.isAddedToEngine
      - decentraland-ecs.IEntity.removeComponent
      - decentraland-ecs.IEntity.removeComponent_1
      - decentraland-ecs.IEntity.removeComponent_2
      - decentraland-ecs.IEntity.removeComponent_3
      - decentraland-ecs.IEntity.setParent
      - decentraland-ecs.IEntity.alive
      - decentraland-ecs.IEntity.children
      - decentraland-ecs.IEntity.components
      - decentraland-ecs.IEntity.eventManager
      - decentraland-ecs.IEntity.uuid
  - uid: decentraland-ecs.IEntity.addComponent
    summary: 'Adds a component. If the component already exist, it throws an Error.'
    name: addComponent(component)
    fullName: addComponent(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addComponent<T extends object>(component: T): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: component
          description: component instance.
          type:
            - T
  - uid: decentraland-ecs.IEntity.addComponentOrReplace
    name: addComponentOrReplace(component)
    fullName: addComponentOrReplace(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addComponentOrReplace<T extends object>(component: T): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - T
  - uid: decentraland-ecs.IEntity.getComponent
    name: getComponent(component)
    fullName: getComponent(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getComponent<T = any>(component: string): T;'
      return:
        type:
          - T
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - string
  - uid: decentraland-ecs.IEntity.getComponent_1
    name: getComponent(component)
    fullName: getComponent(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getComponent<T>(component: ComponentConstructor<T>): T;'
      return:
        type:
          - T
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - ComponentConstructor<T>
  - uid: decentraland-ecs.IEntity.getComponent_2
    name: getComponent(component)
    fullName: getComponent(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getComponent<T>(component: ComponentConstructor<T> | string): T;'
      return:
        type:
          - T
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - ComponentConstructor<T> | string
  - uid: decentraland-ecs.IEntity.getComponentOrCreate
    name: getComponentOrCreate(component)
    fullName: getComponentOrCreate(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        getComponentOrCreate<T>(component: ComponentConstructor<T> & {
                new (): T;
            }): T;
      return:
        type:
          - T
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - |-
              ComponentConstructor<T> & {
                      new (): T;
                  }
  - uid: decentraland-ecs.IEntity.getComponentOrNull
    summary: 'Gets a component, if it doesn''t exist, it returns null.'
    name: getComponentOrNull(component)
    fullName: getComponentOrNull(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getComponentOrNull<T = any>(component: string): T | null;'
      return:
        type:
          - T | null
        description: ''
      parameters:
        - id: component
          description: component class or name
          type:
            - string
  - uid: decentraland-ecs.IEntity.getComponentOrNull_1
    name: getComponentOrNull(component)
    fullName: getComponentOrNull(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getComponentOrNull<T>(component: ComponentConstructor<T>): T | null;'
      return:
        type:
          - T | null
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - ComponentConstructor<T>
  - uid: decentraland-ecs.IEntity.getComponentOrNull_2
    name: getComponentOrNull(component)
    fullName: getComponentOrNull(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getComponentOrNull<T>(component: ComponentConstructor<T> | string): T | null;'
      return:
        type:
          - T | null
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - ComponentConstructor<T> | string
  - uid: decentraland-ecs.IEntity.getParent
    name: getParent()
    fullName: getParent()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParent(): IEntity | null;'
      return:
        type:
          - IEntity | null
        description: ''
  - uid: decentraland-ecs.IEntity.hasComponent
    name: hasComponent(component)
    fullName: hasComponent(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hasComponent<T = any>(component: string): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - string
  - uid: decentraland-ecs.IEntity.hasComponent_1
    name: hasComponent(component)
    fullName: hasComponent(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hasComponent<T>(component: ComponentConstructor<T>): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - ComponentConstructor<T>
  - uid: decentraland-ecs.IEntity.hasComponent_2
    name: hasComponent(component)
    fullName: hasComponent(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hasComponent<T extends object>(component: T): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - T
  - uid: decentraland-ecs.IEntity.hasComponent_3
    name: hasComponent(component)
    fullName: hasComponent(component)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hasComponent<T>(component: ComponentConstructor<T> | string): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - ComponentConstructor<T> | string
  - uid: decentraland-ecs.IEntity.isAddedToEngine
    name: isAddedToEngine()
    fullName: isAddedToEngine()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isAddedToEngine(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: decentraland-ecs.IEntity.removeComponent
    name: 'removeComponent(component, triggerRemovedEvent)'
    fullName: 'removeComponent(component, triggerRemovedEvent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeComponent(component: string, triggerRemovedEvent?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - string
        - id: triggerRemovedEvent
          description: ''
          type:
            - boolean
  - uid: decentraland-ecs.IEntity.removeComponent_1
    name: 'removeComponent(component, triggerRemovedEvent)'
    fullName: 'removeComponent(component, triggerRemovedEvent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeComponent<T extends object>(component: T, triggerRemovedEvent?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - T
        - id: triggerRemovedEvent
          description: ''
          type:
            - boolean
  - uid: decentraland-ecs.IEntity.removeComponent_2
    name: 'removeComponent(component, triggerRemovedEvent)'
    fullName: 'removeComponent(component, triggerRemovedEvent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeComponent(component: ComponentConstructor<any>, triggerRemovedEvent?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - ComponentConstructor<any>
        - id: triggerRemovedEvent
          description: ''
          type:
            - boolean
  - uid: decentraland-ecs.IEntity.removeComponent_3
    name: 'removeComponent(component, triggerRemovedEvent)'
    fullName: 'removeComponent(component, triggerRemovedEvent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeComponent(component: object | string | Function, triggerRemovedEvent: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: component
          description: ''
          type:
            - object | string | Function
        - id: triggerRemovedEvent
          description: ''
          type:
            - any
  - uid: decentraland-ecs.IEntity.setParent
    name: setParent(e)
    fullName: setParent(e)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setParent(e: IEntity): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: e
          description: ''
          type:
            - decentraland-ecs.IEntity
  - uid: decentraland-ecs.IEntity.alive
    name: alive
    fullName: alive
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alive: boolean;'
      return:
        type:
          - boolean
  - uid: decentraland-ecs.IEntity.children
    name: children
    fullName: children
    langs:
      - typeScript
    type: property
    syntax:
      content: 'children: Record<string, IEntity>;'
      return:
        type:
          - 'Record<string, IEntity>'
  - uid: decentraland-ecs.IEntity.components
    name: components
    fullName: components
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly components: Record<string, any>;'
      return:
        type:
          - 'Record<string, any>'
  - uid: decentraland-ecs.IEntity.eventManager
    name: eventManager
    fullName: eventManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'eventManager: EventManager | null;'
      return:
        type:
          - EventManager | null
  - uid: decentraland-ecs.IEntity.uuid
    name: uuid
    fullName: uuid
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly uuid: string;'
      return:
        type:
          - string
