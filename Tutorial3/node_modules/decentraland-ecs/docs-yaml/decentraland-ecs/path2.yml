### YamlMime:UniversalReference
items:
  - uid: decentraland-ecs.Path2
    summary: Represents a 2D path made up of multiple 2D points
    name: Path2
    fullName: Path2
    langs:
      - typeScript
    type: class
    package: decentraland-ecs
    children:
      - decentraland-ecs.Path2.(constructor)
      - decentraland-ecs.Path2.addArcTo
      - decentraland-ecs.Path2.addLineTo
      - decentraland-ecs.Path2.close
      - decentraland-ecs.Path2.closed
      - decentraland-ecs.Path2.getPointAtLengthPosition
      - decentraland-ecs.Path2.getPoints
      - decentraland-ecs.Path2.length
      - decentraland-ecs.Path2.StartingAt
  - uid: decentraland-ecs.Path2.(constructor)
    summary: Creates a Path2 object from the starting 2D coordinates x and y.
    name: '(constructor)(x, y)'
    fullName: '(constructor)(x, y)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(x: number, y: number);'
      parameters:
        - id: x
          description: the starting points x value
          type:
            - number
        - id: 'y'
          description: the starting points y value
          type:
            - number
  - uid: decentraland-ecs.Path2.addArcTo
    summary: >-
      Adds \_numberOfSegments\_ segments according to the arc definition (middle point coordinates, end point
      coordinates, the arc start point being the current Path2 last point) to the current Path2.
    name: 'addArcTo(midX, midY, endX, endY, numberOfSegments)'
    fullName: 'addArcTo(midX, midY, endX, endY, numberOfSegments)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addArcTo(midX: number, midY: number, endX: number, endY: number, numberOfSegments?: number): Path2;'
      return:
        type:
          - decentraland-ecs.Path2
        description: the updated Path2.
      parameters:
        - id: midX
          description: middle point x value
          type:
            - number
        - id: midY
          description: middle point y value
          type:
            - number
        - id: endX
          description: end point x value
          type:
            - number
        - id: endY
          description: end point y value
          type:
            - number
        - id: numberOfSegments
          description: '(default: 36)'
          type:
            - number
  - uid: decentraland-ecs.Path2.addLineTo
    summary: 'Adds a new segment until the given coordinates (x, y) to the current Path2.'
    name: 'addLineTo(x, y)'
    fullName: 'addLineTo(x, y)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLineTo(x: number, y: number): Path2;'
      return:
        type:
          - decentraland-ecs.Path2
        description: the updated Path2.
      parameters:
        - id: x
          description: the added points x value
          type:
            - number
        - id: 'y'
          description: the added points y value
          type:
            - number
  - uid: decentraland-ecs.Path2.close
    summary: Closes the Path2.
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): Path2;'
      return:
        type:
          - decentraland-ecs.Path2
        description: the Path2.
  - uid: decentraland-ecs.Path2.closed
    summary: If the path start and end point are the same
    name: closed
    fullName: closed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'closed: boolean;'
      return:
        type:
          - boolean
  - uid: decentraland-ecs.Path2.getPointAtLengthPosition
    summary: Retreives the point at the distance aways from the starting point
    name: getPointAtLengthPosition(normalizedLengthPosition)
    fullName: getPointAtLengthPosition(normalizedLengthPosition)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPointAtLengthPosition(normalizedLengthPosition: number): Vector2;'
      return:
        type:
          - decentraland-ecs.Vector2
        description: a new Vector2 located at a percentage of the Path2 total length on this path.
      parameters:
        - id: normalizedLengthPosition
          description: the length along the path to retreive the point from
          type:
            - number
  - uid: decentraland-ecs.Path2.getPoints
    summary: Gets the points which construct the path
    name: getPoints()
    fullName: getPoints()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPoints(): Vector2[];'
      return:
        type:
          - 'Vector2[]'
        description: the Path2 internal array of points.
  - uid: decentraland-ecs.Path2.length
    summary: Gets the sum of the distance between each sequential point in the path
    name: length()
    fullName: length()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'length(): number;'
      return:
        type:
          - number
        description: the Path2 total length (float).
  - uid: decentraland-ecs.Path2.StartingAt
    summary: Creates a new path starting from an x and y position
    name: 'StartingAt(x, y)'
    fullName: 'StartingAt(x, y)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static StartingAt(x: number, y: number): Path2;'
      return:
        type:
          - decentraland-ecs.Path2
        description: 'a new Path2 starting at the coordinates (x, y).'
      parameters:
        - id: x
          description: starting x value
          type:
            - number
        - id: 'y'
          description: starting y value
          type:
            - number
