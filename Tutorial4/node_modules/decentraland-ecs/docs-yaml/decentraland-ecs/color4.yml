### YamlMime:UniversalReference
items:
  - uid: decentraland-ecs.Color4
    summary: Class used to hold a RBGA color
    name: Color4
    fullName: Color4
    langs:
      - typeScript
    type: class
    package: decentraland-ecs
    children:
      - decentraland-ecs.Color4.(constructor)
      - decentraland-ecs.Color4.a
      - decentraland-ecs.Color4.add
      - decentraland-ecs.Color4.addInPlace
      - decentraland-ecs.Color4.asArray
      - decentraland-ecs.Color4.b
      - decentraland-ecs.Color4.Black
      - decentraland-ecs.Color4.Blue
      - decentraland-ecs.Color4.CheckColors4
      - decentraland-ecs.Color4.clampToRef
      - decentraland-ecs.Color4.Clear
      - decentraland-ecs.Color4.clone
      - decentraland-ecs.Color4.copyFrom
      - decentraland-ecs.Color4.copyFromFloats
      - decentraland-ecs.Color4.FromArray
      - decentraland-ecs.Color4.FromColor3
      - decentraland-ecs.Color4.FromHexString
      - decentraland-ecs.Color4.FromInts
      - decentraland-ecs.Color4.g
      - decentraland-ecs.Color4.getClassName
      - decentraland-ecs.Color4.getHashCode
      - decentraland-ecs.Color4.Gray
      - decentraland-ecs.Color4.Green
      - decentraland-ecs.Color4.Lerp
      - decentraland-ecs.Color4.LerpToRef
      - decentraland-ecs.Color4.Magenta
      - decentraland-ecs.Color4.multiply
      - decentraland-ecs.Color4.multiplyToRef
      - decentraland-ecs.Color4.Purple
      - decentraland-ecs.Color4.r
      - decentraland-ecs.Color4.Red
      - decentraland-ecs.Color4.scale
      - decentraland-ecs.Color4.scaleAndAddToRef
      - decentraland-ecs.Color4.scaleToRef
      - decentraland-ecs.Color4.set
      - decentraland-ecs.Color4.subtract
      - decentraland-ecs.Color4.subtractToRef
      - decentraland-ecs.Color4.Teal
      - decentraland-ecs.Color4.toArray
      - decentraland-ecs.Color4.toGammaSpace
      - decentraland-ecs.Color4.toGammaSpaceToRef
      - decentraland-ecs.Color4.toHexString
      - decentraland-ecs.Color4.toLinearSpace
      - decentraland-ecs.Color4.toLinearSpaceToRef
      - decentraland-ecs.Color4.toString
      - decentraland-ecs.Color4.White
      - decentraland-ecs.Color4.Yellow
  - uid: decentraland-ecs.Color4.(constructor)
    summary: 'Creates a new Color4 object from red, green, blue values, all between 0 and 1'
    name: '(constructor)(r, g, b, a)'
    fullName: '(constructor)(r, g, b, a)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: |-
        constructor(
            r?: number, 
            g?: number, 
            b?: number, 
            a?: number);
      parameters:
        - id: r
          description: 'defines the red component (between 0 and 1, default is 0)'
          type:
            - number
        - id: g
          description: 'defines the green component (between 0 and 1, default is 0)'
          type:
            - number
        - id: b
          description: 'defines the blue component (between 0 and 1, default is 0)'
          type:
            - number
        - id: a
          description: 'defines the alpha component (between 0 and 1, default is 1)'
          type:
            - number
  - uid: decentraland-ecs.Color4.a
    summary: 'Defines the alpha component (between 0 and 1, default is 1)'
    name: a
    fullName: a
    langs:
      - typeScript
    type: property
    syntax:
      content: 'a: number;'
      return:
        type:
          - number
  - uid: decentraland-ecs.Color4.add
    summary: Creates a new Color4 set with the added values of the current Color4 and of the given one
    name: add(right)
    fullName: add(right)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(right: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
      parameters:
        - id: right
          description: defines the second operand
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.addInPlace
    summary: Adds in place the given Color4 values to the current Color4 object
    name: addInPlace(right)
    fullName: addInPlace(right)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addInPlace(right: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the current updated Color4 object
      parameters:
        - id: right
          description: defines the second operand
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.asArray
    summary: 'Creates a new array populated with 4 numeric elements : red, green, blue, alpha values'
    name: asArray()
    fullName: asArray()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'asArray(): number[];'
      return:
        type:
          - 'number[]'
        description: the new array
  - uid: decentraland-ecs.Color4.b
    summary: 'Defines the blue component (between 0 and 1, default is 0)'
    name: b
    fullName: b
    langs:
      - typeScript
    type: property
    syntax:
      content: 'b: number;'
      return:
        type:
          - number
  - uid: decentraland-ecs.Color4.Black
    summary: Returns a Color4 value containing a black color
    name: Black()
    fullName: Black()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Black(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.Blue
    summary: Returns a Color4 value containing a blue color
    name: Blue()
    fullName: Blue()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Blue(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.CheckColors4
    summary: >-
      Check the content of a given array and convert it to an array containing RGBA data If the original array was
      already containing count \* 4 values then it is returned directly
    name: 'CheckColors4(colors, count)'
    fullName: 'CheckColors4(colors, count)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static CheckColors4(colors: number[], count: number): number[];'
      return:
        type:
          - 'number[]'
        description: an array containing count \* 4 values (RGBA)
      parameters:
        - id: colors
          description: defines the array to check
          type:
            - 'number[]'
        - id: count
          description: defines the number of RGBA data to expect
          type:
            - number
  - uid: decentraland-ecs.Color4.clampToRef
    summary: Clamps the rgb values by the min and max values and stores the result into "result"
    name: 'clampToRef(min, max, result)'
    fullName: 'clampToRef(min, max, result)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clampToRef(min: number | undefined, max: number | undefined, result: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the cuurent Color4
      parameters:
        - id: min
          description: defines minimum clamping value (default is 0)
          type:
            - number | undefined
        - id: max
          description: defines maximum clamping value (default is 1)
          type:
            - number | undefined
        - id: result
          description: defines color to store the result into.
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.Clear
    summary: Returns a Color4 value containing a transparent color
    name: Clear()
    fullName: Clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Clear(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.clone
    summary: Creates a new Color4 copied from the current one
    name: clone()
    fullName: clone()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clone(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.copyFrom
    summary: Copies the given Color4 values into the current one
    name: copyFrom(source)
    fullName: copyFrom(source)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyFrom(source: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the current updated Color4 object
      parameters:
        - id: source
          description: defines the source Color4 object
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.copyFromFloats
    summary: Copies the given float values into the current one
    name: 'copyFromFloats(r, g, b, a)'
    fullName: 'copyFromFloats(r, g, b, a)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyFromFloats(r: number, g: number, b: number, a: number): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the current updated Color4 object
      parameters:
        - id: r
          description: defines the red component to read from
          type:
            - number
        - id: g
          description: defines the green component to read from
          type:
            - number
        - id: b
          description: defines the blue component to read from
          type:
            - number
        - id: a
          description: defines the alpha component to read from
          type:
            - number
  - uid: decentraland-ecs.Color4.FromArray
    summary: Creates a new Color4 from the starting index element of the given array
    name: 'FromArray(array, offset)'
    fullName: 'FromArray(array, offset)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static FromArray(array: ArrayLike<number>, offset?: number): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
      parameters:
        - id: array
          description: defines the source array to read from
          type:
            - ArrayLike<number>
        - id: offset
          description: defines the offset in the source array
          type:
            - number
  - uid: decentraland-ecs.Color4.FromColor3
    summary: Creates a new Color4 from a Color3 and an alpha value
    name: 'FromColor3(color3, alpha)'
    fullName: 'FromColor3(color3, alpha)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static FromColor3(color3: Color3, alpha?: number): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
      parameters:
        - id: color3
          description: defines the source Color3 to read from
          type:
            - decentraland-ecs.Color3
        - id: alpha
          description: defines the alpha component (1.0 by default)
          type:
            - number
  - uid: decentraland-ecs.Color4.FromHexString
    summary: Creates a new Color4 from the string containing valid hexadecimal values
    name: FromHexString(hex)
    fullName: FromHexString(hex)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static FromHexString(hex: string): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
      parameters:
        - id: hex
          description: defines a string containing valid hexadecimal values
          type:
            - string
  - uid: decentraland-ecs.Color4.FromInts
    summary: Creates a new Color3 from integer values (less than 256)
    name: 'FromInts(r, g, b, a)'
    fullName: 'FromInts(r, g, b, a)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static FromInts(r: number, g: number, b: number, a: number): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color3 object
      parameters:
        - id: r
          description: defines the red component to read from (value between 0 and 255)
          type:
            - number
        - id: g
          description: defines the green component to read from (value between 0 and 255)
          type:
            - number
        - id: b
          description: defines the blue component to read from (value between 0 and 255)
          type:
            - number
        - id: a
          description: defines the alpha component to read from (value between 0 and 255)
          type:
            - number
  - uid: decentraland-ecs.Color4.g
    summary: 'Defines the green component (between 0 and 1, default is 0)'
    name: g
    fullName: g
    langs:
      - typeScript
    type: property
    syntax:
      content: 'g: number;'
      return:
        type:
          - number
  - uid: decentraland-ecs.Color4.getClassName
    summary: Returns the string "Color4"
    name: getClassName()
    fullName: getClassName()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getClassName(): string;'
      return:
        type:
          - string
        description: '"Color4"'
  - uid: decentraland-ecs.Color4.getHashCode
    summary: Compute the Color4 hash code
    name: getHashCode()
    fullName: getHashCode()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHashCode(): number;'
      return:
        type:
          - number
        description: an unique number that can be used to hash Color4 objects
  - uid: decentraland-ecs.Color4.Gray
    summary: Returns a Color4 value containing a gray color
    name: Gray()
    fullName: Gray()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Gray(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.Green
    summary: Returns a Color4 value containing a green color
    name: Green()
    fullName: Green()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Green(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.Lerp
    summary: >-
      Creates a new Color4 object set with the linearly interpolated values of "amount" between the left Color4 object
      and the right Color4 object
    name: 'Lerp(left, right, amount)'
    fullName: 'Lerp(left, right, amount)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Lerp(left: Color4, right: Color4, amount: number): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
      parameters:
        - id: left
          description: defines the start value
          type:
            - decentraland-ecs.Color4
        - id: right
          description: defines the end value
          type:
            - decentraland-ecs.Color4
        - id: amount
          description: defines the gradient factor
          type:
            - number
  - uid: decentraland-ecs.Color4.LerpToRef
    summary: >-
      Set the given "result" with the linearly interpolated values of "amount" between the left Color4 object and the
      right Color4 object
    name: 'LerpToRef(left, right, amount, result)'
    fullName: 'LerpToRef(left, right, amount, result)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static LerpToRef(left: Color4, right: Color4, amount: number, result: Color4): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: left
          description: defines the start value
          type:
            - decentraland-ecs.Color4
        - id: right
          description: defines the end value
          type:
            - decentraland-ecs.Color4
        - id: amount
          description: defines the gradient factor
          type:
            - number
        - id: result
          description: defines the Color4 object where to store data
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.Magenta
    summary: Returns a Color4 value containing a magenta color
    name: Magenta()
    fullName: Magenta()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Magenta(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.multiply
    summary: Multipy an Color4 value by another and return a new Color4 object
    name: multiply(color)
    fullName: multiply(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiply(color: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
      parameters:
        - id: color
          description: defines the Color4 value to multiply by
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.multiplyToRef
    summary: Multipy a Color4 value by another and push the result in a reference value
    name: 'multiplyToRef(color, result)'
    fullName: 'multiplyToRef(color, result)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiplyToRef(color: Color4, result: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the result Color4
      parameters:
        - id: color
          description: defines the Color4 value to multiply by
          type:
            - decentraland-ecs.Color4
        - id: result
          description: defines the Color4 to fill the result in
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.Purple
    summary: Returns a Color4 value containing a purple color
    name: Purple()
    fullName: Purple()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Purple(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.r
    summary: 'Defines the red component (between 0 and 1, default is 0)'
    name: r
    fullName: r
    langs:
      - typeScript
    type: property
    syntax:
      content: 'r: number;'
      return:
        type:
          - number
  - uid: decentraland-ecs.Color4.Red
    summary: Returns a Color4 value containing a red color
    name: Red()
    fullName: Red()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Red(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color3 object
  - uid: decentraland-ecs.Color4.scale
    summary: Creates a new Color4 with the current Color4 values multiplied by scale
    name: scale(scale)
    fullName: scale(scale)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scale(scale: number): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
      parameters:
        - id: scale
          description: defines the scaling factor to apply
          type:
            - number
  - uid: decentraland-ecs.Color4.scaleAndAddToRef
    summary: Scale the current Color4 values by a factor and add the result to a given Color4
    name: 'scaleAndAddToRef(scale, result)'
    fullName: 'scaleAndAddToRef(scale, result)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scaleAndAddToRef(scale: number, result: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the unmodified current Color4
      parameters:
        - id: scale
          description: defines the scale factor
          type:
            - number
        - id: result
          description: defines the Color4 object where to store the result
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.scaleToRef
    summary: Multiplies the current Color4 values by scale and stores the result in "result"
    name: 'scaleToRef(scale, result)'
    fullName: 'scaleToRef(scale, result)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scaleToRef(scale: number, result: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the current unmodified Color4
      parameters:
        - id: scale
          description: defines the scaling factor to apply
          type:
            - number
        - id: result
          description: defines the Color4 object where to store the result
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.set
    summary: Copies the given float values into the current one
    name: 'set(r, g, b, a)'
    fullName: 'set(r, g, b, a)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(r: number, g: number, b: number, a: number): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the current updated Color4 object
      parameters:
        - id: r
          description: defines the red component to read from
          type:
            - number
        - id: g
          description: defines the green component to read from
          type:
            - number
        - id: b
          description: defines the blue component to read from
          type:
            - number
        - id: a
          description: defines the alpha component to read from
          type:
            - number
  - uid: decentraland-ecs.Color4.subtract
    summary: Creates a new Color4 set with the subtracted values of the given one from the current Color4
    name: subtract(right)
    fullName: subtract(right)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'subtract(right: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
      parameters:
        - id: right
          description: defines the second operand
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.subtractToRef
    summary: Subtracts the given ones from the current Color4 values and stores the results in "result"
    name: 'subtractToRef(right, result)'
    fullName: 'subtractToRef(right, result)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'subtractToRef(right: Color4, result: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the current Color4 object
      parameters:
        - id: right
          description: defines the second operand
          type:
            - decentraland-ecs.Color4
        - id: result
          description: defines the Color4 object where to store the result
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.Teal
    summary: Returns a Color4 value containing a teal color
    name: Teal()
    fullName: Teal()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Teal(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.toArray
    summary: Stores from the starting index in the given array the Color4 successive values
    name: 'toArray(array, index)'
    fullName: 'toArray(array, index)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toArray(array: number[], index?: number): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the current Color4 object
      parameters:
        - id: array
          description: 'defines the array where to store the r,g,b components'
          type:
            - 'number[]'
        - id: index
          description: defines an optional index in the target array to define where to start storing values
          type:
            - number
  - uid: decentraland-ecs.Color4.toGammaSpace
    summary: Computes a new Color4 converted from the current one to gamma space
    name: toGammaSpace()
    fullName: toGammaSpace()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toGammaSpace(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.toGammaSpaceToRef
    summary: Converts the Color4 values to gamma space and stores the result in "convertedColor"
    name: toGammaSpaceToRef(convertedColor)
    fullName: toGammaSpaceToRef(convertedColor)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toGammaSpaceToRef(convertedColor: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the unmodified Color4
      parameters:
        - id: convertedColor
          description: defines the Color4 object where to store the gamma space version
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.toHexString
    summary: Compute the Color4 hexadecimal code as a string
    name: toHexString()
    fullName: toHexString()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toHexString(): string;'
      return:
        type:
          - string
        description: a string containing the hexadecimal representation of the Color4 object
  - uid: decentraland-ecs.Color4.toLinearSpace
    summary: Computes a new Color4 converted from the current one to linear space
    name: toLinearSpace()
    fullName: toLinearSpace()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toLinearSpace(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.toLinearSpaceToRef
    summary: Converts the Color4 values to linear space and stores the result in "convertedColor"
    name: toLinearSpaceToRef(convertedColor)
    fullName: toLinearSpaceToRef(convertedColor)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toLinearSpaceToRef(convertedColor: Color4): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: the unmodified Color4
      parameters:
        - id: convertedColor
          description: defines the Color4 object where to store the linear space version
          type:
            - decentraland-ecs.Color4
  - uid: decentraland-ecs.Color4.toString
    summary: Creates a string with the Color4 current values
    name: toString()
    fullName: toString()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toString(): string;'
      return:
        type:
          - string
        description: the string representation of the Color4 object
  - uid: decentraland-ecs.Color4.White
    summary: Returns a Color4 value containing a white color
    name: White()
    fullName: White()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static White(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
  - uid: decentraland-ecs.Color4.Yellow
    summary: Returns a Color4 value containing a yellow color
    name: Yellow()
    fullName: Yellow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static Yellow(): Color4;'
      return:
        type:
          - decentraland-ecs.Color4
        description: a new Color4 object
