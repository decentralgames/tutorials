### YamlMime:UniversalReference
items:
  - uid: decentraland-ecs.AnimationState
    name: AnimationState
    fullName: AnimationState
    langs:
      - typeScript
    type: class
    extends:
      - decentraland-ecs.ObservableComponent
    package: decentraland-ecs
    children:
      - decentraland-ecs.AnimationState.(constructor)
      - decentraland-ecs.AnimationState.clip
      - decentraland-ecs.AnimationState.looping
      - decentraland-ecs.AnimationState.pause
      - decentraland-ecs.AnimationState.play
      - decentraland-ecs.AnimationState.playing
      - decentraland-ecs.AnimationState.reset
      - decentraland-ecs.AnimationState.setParams
      - decentraland-ecs.AnimationState.shouldReset
      - decentraland-ecs.AnimationState.speed
      - decentraland-ecs.AnimationState.stop
      - decentraland-ecs.AnimationState.toJSON
      - decentraland-ecs.AnimationState.weight
  - uid: decentraland-ecs.AnimationState.(constructor)
    summary: Constructs a new instance of the `AnimationState` class
    name: '(constructor)(clip, params)'
    fullName: '(constructor)(clip, params)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(clip: string, params?: AnimationParams);'
      parameters:
        - id: clip
          description: ''
          type:
            - string
        - id: params
          description: ''
          type:
            - AnimationParams
  - uid: decentraland-ecs.AnimationState.clip
    summary: Name of the animation in the model
    name: clip
    fullName: clip
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly clip: string;'
      return:
        type:
          - string
  - uid: decentraland-ecs.AnimationState.looping
    summary: 'Does the animation loop?, default: true'
    name: looping
    fullName: looping
    langs:
      - typeScript
    type: property
    syntax:
      content: 'looping: boolean;'
      return:
        type:
          - boolean
  - uid: decentraland-ecs.AnimationState.pause
    summary: Pauses the animation
    name: pause()
    fullName: pause()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'pause(): void;'
      return:
        type:
          - void
        description: ''
  - uid: decentraland-ecs.AnimationState.play
    summary: Starts the animation
    name: play()
    fullName: play()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'play(): void;'
      return:
        type:
          - void
        description: ''
  - uid: decentraland-ecs.AnimationState.playing
    summary: 'Is the animation playing? default: true'
    name: playing
    fullName: playing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'playing: boolean;'
      return:
        type:
          - boolean
  - uid: decentraland-ecs.AnimationState.reset
    summary: Resets the animation state to the frame 0
    name: reset()
    fullName: reset()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reset(): void;'
      return:
        type:
          - void
        description: ''
  - uid: decentraland-ecs.AnimationState.setParams
    summary: Sets the clip parameters
    name: setParams(params)
    fullName: setParams(params)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setParams(params: AnimationParams): this;'
      return:
        type:
          - this
        description: ''
      parameters:
        - id: params
          description: ''
          type:
            - AnimationParams
  - uid: decentraland-ecs.AnimationState.shouldReset
    summary: 'Does any anyone asked to reset the animation? default: false'
    name: shouldReset
    fullName: shouldReset
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shouldReset: boolean;'
      return:
        type:
          - boolean
  - uid: decentraland-ecs.AnimationState.speed
    summary: The animation speed
    name: speed
    fullName: speed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'speed: number;'
      return:
        type:
          - number
  - uid: decentraland-ecs.AnimationState.stop
    summary: Resets and pauses the animation
    name: stop()
    fullName: stop()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'stop(): void;'
      return:
        type:
          - void
        description: ''
  - uid: decentraland-ecs.AnimationState.toJSON
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): any;'
      return:
        type:
          - any
        description: ''
  - uid: decentraland-ecs.AnimationState.weight
    summary: 'Weight of the animation, values from 0 to 1, used to blend several animations. default: 1'
    name: weight
    fullName: weight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'weight: number;'
      return:
        type:
          - number
