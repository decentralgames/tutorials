import { Engine } from '../ecs/Engine';
import { OnUUIDEvent } from './Components';
import { ISystem, IEntity } from '../ecs/IEntity';
/**
 * @public
 */
export declare class RaycastEventSystem implements ISystem {
    activate(engine: Engine): void;
    deactivate(): void;
}
/**
 * @public
 */
export declare class PointerEventSystem implements ISystem {
    activate(engine: Engine): void;
    deactivate(): void;
}
/**
 * @public
 */
export declare class UUIDEventSystem implements ISystem {
    handlerMap: {
        [uuid: string]: OnUUIDEvent<any>;
    };
    activate(engine: Engine): void;
    deactivate(): void;
    onAddEntity(entity: IEntity): void;
    onRemoveEntity(entity: IEntity): void;
    private componentAdded;
    private componentRemoved;
    private handleEvent;
}
