import { ObservableComponent } from '../ecs/Component';
import { Texture } from './Components';
import { Color4 } from './math';
import { OnTextSubmit, OnBlur, OnChanged, OnClick, OnFocus } from './UIEvents';
/**
 * @public
 */
export declare abstract class UIShape extends ObservableComponent {
    /**
     * Defines if the entity and its children should be rendered
     */
    name: string | null;
    visible: boolean;
    opacity: number;
    hAlign: string;
    vAlign: string;
    width: string | number;
    height: string | number;
    positionX: string | number;
    positionY: string | number;
    isPointerBlocker: boolean;
    private _parent?;
    constructor(parent: UIShape | null);
    readonly parent: UIShape | undefined;
}
/**
 * @public
 */
export declare class UICanvas extends UIShape {
    constructor();
}
/**
 * @public
 */
export declare class UIContainerRect extends UIShape {
    adaptWidth: boolean;
    adaptHeight: boolean;
    thickness: number;
    color: Color4;
    alignmentUsesSize: boolean;
}
/**
 * @public
 */
export declare enum UIStackOrientation {
    VERTICAL = 0,
    HORIZONTAL = 1
}
/**
 * @public
 */
export declare class UIContainerStack extends UIShape {
    adaptWidth: boolean;
    adaptHeight: boolean;
    color: Color4;
    stackOrientation: UIStackOrientation;
    spacing: Number;
}
/**
 * @public
 */
export declare class UIButton extends UIShape {
    fontSize: number;
    fontWeight: string;
    thickness: number;
    cornerRadius: number;
    color: Color4;
    background: Color4;
    paddingTop: number;
    paddingRight: number;
    paddingBottom: number;
    paddingLeft: number;
    shadowBlur: number;
    shadowOffsetX: number;
    shadowOffsetY: number;
    shadowColor: Color4;
    text: string;
}
/**
 * @public
 */
export declare class UIText extends UIShape {
    outlineWidth: number;
    outlineColor: Color4;
    color: Color4;
    fontSize: number;
    fontAutoSize: boolean;
    fontWeight: string;
    value: string;
    lineSpacing: number;
    lineCount: number;
    adaptWidth: boolean;
    adaptHeight: boolean;
    textWrapping: boolean;
    shadowBlur: number;
    shadowOffsetX: number;
    shadowOffsetY: number;
    shadowColor: Color4;
    hTextAlign: string;
    vTextAlign: string;
    paddingTop: number;
    paddingRight: number;
    paddingBottom: number;
    paddingLeft: number;
}
/**
 * @public
 */
export declare class UIInputText extends UIShape {
    outlineWidth: number;
    outlineColor: Color4;
    color: Color4;
    thickness: number;
    fontSize: number;
    fontWeight: string;
    value: string;
    placeholderColor: Color4;
    placeholder: string;
    margin: number;
    maxWidth: number;
    hTextAlign: string;
    vTextAlign: string;
    autoStretchWidth: boolean;
    background: Color4;
    focusedBackground: Color4;
    textWrapping: boolean;
    shadowBlur: number;
    shadowOffsetX: number;
    shadowOffsetY: number;
    shadowColor: Color4;
    paddingTop: number;
    paddingRight: number;
    paddingBottom: number;
    paddingLeft: number;
    onTextSubmit: OnTextSubmit | null;
    onChanged: OnChanged | null;
    onFocus: OnFocus | null;
    onBlur: OnBlur | null;
}
/**
 * @public
 */
export declare class UIImage extends UIShape {
    sourceLeft: number;
    sourceTop: number;
    sourceWidth: number;
    sourceHeight: number;
    source?: Texture;
    paddingTop: number;
    paddingRight: number;
    paddingBottom: number;
    paddingLeft: number;
    sizeInPixels: boolean;
    onClick: OnClick | null;
    constructor(parent: UIShape, source: Texture);
}
/**
 * @public
 */
export declare class UIScrollRect extends UIShape {
    valueX: number;
    valueY: number;
    borderColor: Color4;
    backgroundColor: Color4;
    isHorizontal: boolean;
    isVertical: boolean;
    paddingTop: number;
    paddingRight: number;
    paddingBottom: number;
    paddingLeft: number;
    onChanged: OnChanged | null;
}
